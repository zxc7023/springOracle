<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RepBoardMapper">

	<!-- 계층형 쿼리 repboard테이블의 전체자료를 검색하는 쿼리, 검색어가 있다면 동적SQL where문을 통하여 검색   -->
	<select id="selectList" resultType="RepBoard">
		select * from ( 
			select * from ( 
				select rownum rnum, level, no, parent_no, DECODE(level,1,SUBJECT,CONCAT( LPAD(' ', (level-1)*2,' '), CONCAT('└',SUBJECT))) SUBJECT, 
				content, password, registerdate, viewcount
				from repboard
				<include refid="repboard_search"></include>
				start with parent_no = 0
				connect by prior no = parent_no
				order siblings by no desc
				) replist
			where rnum &lt;= (#{pageStart} + #{perPageNum})
		)
		where rnum &gt;= #{pageStart}
	</select>
	
	<!-- 해당하는 조건의 전체 게시물의 갯수를 구한다. -->
	<select id="countPaging" resultType="int">
		select count(no) from repboard
		<include refid="repboard_search"></include>
	</select>
	
	<!-- 검색조건에 해당하는 where을 동적으로 불러오기 위하여 만든 mybatis sql문  -->
	<sql id="repboard_search">
		<where>
			<if test=" keyword != null and keyword !=''">
				${searchType} like '%' || #{keyword} || '%'
			</if>
		</where>
	</sql>
	
	<!-- 부모글이 없으면 0, 있으면 해당하는 글 번호로 데이터를 넣는다. -->
	<insert id="insert" parameterType="RepBoard">
		insert into repboard values (repboard_seq.NEXTVAL,
		#{parent_no}, #{subject}, #{content}, #{password}, sysdate, 0)
	</insert>
	
	<!-- 해당하는 번호를 부모글으로, 자식에 해당하는 글까지 모두 가져온다. -->
	<select id="selectByNo" resultType="RepBoard">
		SELECT no,parent_no,DECODE(level,1,SUBJECT,CONCAT( LPAD(' ', (level-1)*2,' '), CONCAT('└',SUBJECT))) SUBJECT,content,password,registerdate,viewcount
		from repboard a
		start with no=#{no}
		connect by prior no=parent_no
		order siblings by no desc
	</select>

	<select id="selectPreBoardByNo" resultType="Repboard">
		select a.pre_no no, a.subject, a.registerdate
		from (
				SELECT no ,lag(no,1) over (order by no desc) pre_no, lag(subject,1) over (order by no desc) subject, lag(registerdate,1) over (order by no desc) registerdate
				from repboard
				where level=1
				start with parent_no = 0
				connect by prior no = parent_no
		) a
		where a.no = #{no}
	</select>
	
	<select id="selectNextBoardByNo" resultType="Repboard">
		select a.pre_no no, a.subject, a.registerdate
		from (
				SELECT no ,lead(no,1) over (order by no desc) pre_no, lead(subject,1) over (order by no desc) subject, lead(registerdate,1) over (order by no desc) registerdate
				from repboard
				where level=1
				start with parent_no = 0
				connect by prior no = parent_no
		) a
		where a.no = #{no}
	</select>





	<delete id="delete">
		DELETE repboard WHERE no=#{no}
	</delete>

	<select id="chkpassword" parameterType="hashmap" resultType="RepBoard">
		SELECT * FROM repboard WHERE
		no=#{no} AND password=#{password}
	</select>

	<update id="update" parameterType="RepBoard">
		update repboard
		<set>
			<if test="subject != null">subject=#{subject},</if>
			<if test="content != null">content=#{content},</if>
			<if test="password != null">password=#{password}</if>
		</set>
		where no=#{no}
	</update>

</mapper>
